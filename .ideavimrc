"" Source your .vimrc
"source ~/.vimrc

"" -- Suggested options --
" Show a few lines of context around the cursor. Note that this makes the
" text scroll if you mouse-click near the start or end of the window.
set scrolloff=5

" Do incremental searching.
set incsearch

"" -- Map IDE actions to IdeaVim -- https://jb.gg/abva4t
"" Map \r to the Reformat Code action
"map \r <Action>(ReformatCode)

"" Map <leader>d to start debug
"map <leader>d <Action>(Debug)

"" Map \b to toggle the breakpoint on the current line
"map \b <Action>(ToggleLineBreakpoint)


" Find more examples here: https://jb.gg/share-ideavimrc

" use Vim handlers in normal mode and IDE handlers in insert mode
sethandler n:vim i:ide
sethandler <c-p> n:ide i:ide

set clipboard+=unnamed
set ignorecase
set scrolloff=30
set history=200
set hlsearch
set relativenumber

""" Common settings -------------------------
set showmode
set so=5
set incsearch
set nu

""" Idea specific settings ------------------
set idea-put
set ideajoin
set idearefactormode=keep
set textobj-entire

""" Map leader to space ---------------------
let mapleader=" "

map <leader>s :w<cr>:source ~/.ideavimrc<CR>
map <leader>S :e ~\.ideavimrc<CR>
map <leader><CR> :nohlsearch<CR>
map <leader>e <Action>(RecentFiles)
map <leader>d <Action>(Debug)
map <leader>r <Action>(RenameElement)
map <leader>c <Action>(Stop)
map <leader>z <Action>(ToggleDistractionFreeMode)
map <leader>q <Action>(QuickJavaDoc)
map <leader>wt <Action>(SelectIn)
map <leader>we <Action>(FileStructurePopup)
map <leader>ww <Action>(SelectInProjectView)
map <leader>wq <Action>(QuickJavaDoc)
map <leader>wa <Action>(HideAllWindows)
map <leader>va <Action>(Annotate)
map <leader>vh <Action>(Vcs.ShowTabbedFileHistory)
map <leader>vw <Action>(EditorSelectWord)
map <leader>b <Action>(ToggleLineBreakpoint)
"map <leader>o <Action>(FileStructurePopup)
map <leader><Space> o<esc>
map <leader>a <Action>($SelectAll)

map <C-s> :w<CR>
map <C-o> <Action>(Back)
map <C-i> <Action>(Forward)
map <C-j> <Action>(MethodDown)
map <C-k> <Action>(MethodUp)
map <C-p> o<esc>p

map <S-Space> <Action>(GotoNextError)

map gI <Action>(GotoImplementation)
map gw <Action>(FindUsagesInFile)
" Don't use Ex mode, use Q for formatting.
map Q gq
imap jj <esc>
vnoremap * "ny/<c-r>n<cr>
nnoremap <esc> :noh<cr><esc>

""" Plugins  --------------------------------
set surround
set multiple-cursors
set commentary
set argtextobj
set easymotion
set textobj-entire
set ReplaceWithRegister
set NERDTree
set keep-english-in-normal
set exchange
set commentary
" IdeaVimExtension 输入法切换
set keep-english-in-normal-and-restore-in-insert
" which-key
set which-key

""" Plugin settings -------------------------
let g:argtextobj_pairs="[:],(:),<:>"
map <leader>tt :NERDTree<CR>
map S <Plug>(easymotion-s)
" map <leader>f <Plug>(easymotion-s)
" map <leader>e <Plug>(easymotion-f)
nnoremap U <Action>($Redo)
